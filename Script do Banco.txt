/******************************************************************************/
/***         Generated by IBExpert 2020.4.21.2 27/02/2021 00:30:07          ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/
SET SQL DIALECT 3;



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GEN_TBLABASTECIMENTO_ID;
SET GENERATOR GEN_TBLABASTECIMENTO_ID TO 6;

CREATE GENERATOR GEN_TBLBOMBA_ID;
SET GENERATOR GEN_TBLBOMBA_ID TO 4;

CREATE GENERATOR GEN_TBLCOMBUSTIVEL_ID;
SET GENERATOR GEN_TBLCOMBUSTIVEL_ID TO 2;

CREATE GENERATOR GEN_TBLTANQUE_ID;
SET GENERATOR GEN_TBLTANQUE_ID TO 2;



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE TBLABASTECIMENTO (
    CODIGO              INTEGER NOT NULL,
    CODIGO_BOMBA        INTEGER NOT NULL,
    LITROS              NUMERIC(11,2) NOT NULL,
    VALORABASTECIMENTO  NUMERIC(11,2) NOT NULL,
    VALORIMPOSTO        NUMERIC(11,2) NOT NULL,
    DATA                DATE NOT NULL
);

CREATE TABLE TBLBOMBA (
    CODIGO         INTEGER NOT NULL,
    CODIGO_TANQUE  INTEGER NOT NULL,
    NUMERO         INTEGER
);

CREATE TABLE TBLCOMBUSTIVEL (
    CODIGO      INTEGER NOT NULL,
    DESCRICAO   VARCHAR(100) NOT NULL,
    VALORLITRO  NUMERIC(11,2) NOT NULL
);

CREATE TABLE TBLTANQUE (
    CODIGO              INTEGER NOT NULL,
    CODIGO_COMBUSTIVEL  INTEGER NOT NULL,
    VOLUMETOTAL         NUMERIC(11,2) NOT NULL,
    VOLUMEATUAL         NUMERIC(11,2) NOT NULL,
    NUMERO              INTEGER
);



/******************************************************************************/
/***                           Unique constraints                           ***/
/******************************************************************************/

ALTER TABLE TBLBOMBA ADD CONSTRAINT UNQ1_TBLBOMBA UNIQUE (NUMERO);
ALTER TABLE TBLTANQUE ADD CONSTRAINT UNQ1_TBLTANQUE UNIQUE (NUMERO);


/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE TBLABASTECIMENTO ADD CONSTRAINT PK_TBLABASTECIMENTO PRIMARY KEY (CODIGO);
ALTER TABLE TBLBOMBA ADD CONSTRAINT PK_TBLBOMBA PRIMARY KEY (CODIGO);
ALTER TABLE TBLCOMBUSTIVEL ADD CONSTRAINT PK_TBLCOMBUSTIVEL PRIMARY KEY (CODIGO);
ALTER TABLE TBLTANQUE ADD CONSTRAINT PK_TBLTANQUE PRIMARY KEY (CODIGO);


/******************************************************************************/
/***                              Foreign keys                              ***/
/******************************************************************************/

ALTER TABLE TBLABASTECIMENTO ADD CONSTRAINT FK_TBLABASTECIMENTO_1 FOREIGN KEY (CODIGO_BOMBA) REFERENCES TBLBOMBA (CODIGO);
ALTER TABLE TBLBOMBA ADD CONSTRAINT FK_TBLBOMBA_1 FOREIGN KEY (CODIGO_TANQUE) REFERENCES TBLTANQUE (CODIGO);
ALTER TABLE TBLTANQUE ADD CONSTRAINT FK_TBLTANQUE_1 FOREIGN KEY (CODIGO_COMBUSTIVEL) REFERENCES TBLCOMBUSTIVEL (CODIGO);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: TBLABASTECIMENTO_BI */
CREATE OR ALTER TRIGGER TBLABASTECIMENTO_BI FOR TBLABASTECIMENTO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.codigo is null) then
    new.codigo = gen_id(gen_tblabastecimento_id,1);
end
^

/* Trigger: TBLBOMBA_BI */
CREATE OR ALTER TRIGGER TBLBOMBA_BI FOR TBLBOMBA
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.codigo is null) then
    new.codigo = gen_id(gen_tblbomba_id,1);
end
^

/* Trigger: TBLCOMBUSTIVEL_BI */
CREATE OR ALTER TRIGGER TBLCOMBUSTIVEL_BI FOR TBLCOMBUSTIVEL
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.codigo is null) then
    new.codigo = gen_id(gen_tblcombustivel_id,1);
end
^

/* Trigger: TBLTANQUE_BI */
CREATE OR ALTER TRIGGER TBLTANQUE_BI FOR TBLTANQUE
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.codigo is null) then
    new.codigo = gen_id(gen_tbltanque_id,1);
end
^
SET TERM ; ^



/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/



INSERT INTO TBLCOMBUSTIVEL (CODIGO, DESCRICAO, VALORLITRO)
                    VALUES (1, 'Gasolina', 5);
INSERT INTO TBLCOMBUSTIVEL (CODIGO, DESCRICAO, VALORLITRO)
                    VALUES (2, 'Diesel', 3.8);

COMMIT WORK;


INSERT INTO TBLTANQUE (CODIGO, CODIGO_COMBUSTIVEL, VOLUMETOTAL, VOLUMEATUAL, NUMERO)
               VALUES (1, 1, 10000, 10000, 1);
INSERT INTO TBLTANQUE (CODIGO, CODIGO_COMBUSTIVEL, VOLUMETOTAL, VOLUMEATUAL, NUMERO)
               VALUES (2, 2, 8000, 8000, 2);

COMMIT WORK;



INSERT INTO TBLBOMBA (CODIGO, CODIGO_TANQUE, NUMERO)
              VALUES (1, 1, 1);
INSERT INTO TBLBOMBA (CODIGO, CODIGO_TANQUE, NUMERO)
              VALUES (2, 1, 2);
INSERT INTO TBLBOMBA (CODIGO, CODIGO_TANQUE, NUMERO)
              VALUES (3, 2, 3);
INSERT INTO TBLBOMBA (CODIGO, CODIGO_TANQUE, NUMERO)
              VALUES (4, 2, 4);

COMMIT WORK;